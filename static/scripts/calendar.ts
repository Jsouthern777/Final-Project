namespace HolidaysAPI {
    export let currentMeme: Holiday | null = null;
    export const baseURL: string = "https://holidayapi.com";
    export interface Holiday {
        country: string;
        date: string;
        name: string;
        observed: string;
        public: boolean;
        uuid: string;
        weekday: [Obj];
    }
    export interface Obj {
        name: string
        numeric: string
    }
    export interface observed extends Obj{
        Prototype: string
    }
    export interface date extends Obj{
        Prototype: string
    }


    export interface HolidayList {
        success: boolean;
        data: undefined | { memes: Array<Holiday>; };
    }

    // definees a 'subclass' of HTMLDivElement which allows it to store a meme
    export interface HolidayDiv extends HTMLDivElement {
        meme: undefined | Holiday;
    }

    export let months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
}


document.addEventListener("DOMContentLoaded", async () => {
    // when the page first loads, load all the meme templates
    getHolidays()
    const currentDate = Date()
    // const month = currentDate.getMonth()



    // attach a listener to activate the modal when it is activated
    // HINT: the event will be generated by the modal and the event type is "show.bs.modal"
    // const modal = document.getElementById("formModal");
    // modal.addEventListener("show.bs.modal", activateModal)

    // // attach an event listener to the modal create button to call submitMeme
    // const modalCreateButton = <HTMLButtonElement> document.getElementById("post-button");
    // modalCreateButton.addEventListener("click", submitMeme);
   
});



// api key: bac573e4-8382-420b-8953-b809ce98d3bf
async function getHolidays(): Promise<void> {
    const url = `${HolidaysAPI.baseURL}/v1/holidays`;
    const params = new URLSearchParams({
      country: "US",
      year: "2023",
      pretty: "true",
      key: "bac573e4-8382-420b-8953-b809ce98d3bf",
    });
    
    const response = await fetch(`${url}?${params.toString()}`);
    const holidays = <HolidaysAPI.HolidayList> (await validateJSON(response))
    console.log("Holidays:", holidays);


    
        //   if (!response.ok) {
        //     throw new Error(`Http error status: ${response.status}`);
        //   }
  
      
    // } catch (error) {
    //   console.error("Error fetching holidays:", error);
    // }
  }

async function validateJSON(response: Response): Promise<any> {
    if (response.ok) {
        return response.json();
    } else {
        return Promise.reject(response);
    }
}